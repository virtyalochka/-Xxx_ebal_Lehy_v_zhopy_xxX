<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="functionsforserver_8cpp" kind="file" language="C++">
    <compoundname>functionsforserver.cpp</compoundname>
    <includes refid="functionsforserver_8h" local="yes">functionsforserver.h</includes>
    <includes refid="database_8h" local="yes">database.h</includes>
    <includes local="no">QStringList</includes>
    <includes local="no">QString</includes>
    <includes local="no">QMap</includes>
    <includes local="no">QDebug</includes>
    <incdepgraph>
      <node id="28">
        <label>QMap</label>
      </node>
      <node id="21">
        <label>database.h</label>
        <link refid="database_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>C:/QTT/Sborka/server/functionsforserver.cpp</label>
        <link refid="functionsforserver_8cpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>QSqlDatabase</label>
      </node>
      <node id="22">
        <label>QDebug</label>
      </node>
      <node id="20">
        <label>QString</label>
      </node>
      <node id="26">
        <label>QSqlRecord</label>
      </node>
      <node id="25">
        <label>QSqlError</label>
      </node>
      <node id="24">
        <label>QSqlQuery</label>
      </node>
      <node id="19">
        <label>functionsforserver.h</label>
        <link refid="functionsforserver_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>QStringList</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="functionsforserver_8cpp_1a35ec2c03b2fa42dbee1c13e5b89d768c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QByteArray</type>
        <definition>QByteArray auth</definition>
        <argsstring>(QString log)</argsstring>
        <name>auth</name>
        <param>
          <type>QString</type>
          <declname>log</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/QTT/Sborka/server/functionsforserver.cpp" line="10" column="1" bodyfile="C:/QTT/Sborka/server/functionsforserver.cpp" bodystart="10" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="functionsforserver_8cpp_1af15516dbde168cd1fabbce8e4209b5a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QByteArray</type>
        <definition>QByteArray parsing</definition>
        <argsstring>(QString data_from_client)</argsstring>
        <name>parsing</name>
        <param>
          <type>QString</type>
          <declname>data_from_client</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/QTT/Sborka/server/functionsforserver.cpp" line="16" column="1" bodyfile="C:/QTT/Sborka/server/functionsforserver.cpp" bodystart="16" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="functionsforserver_8h" kindref="compound">functionsforserver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="database_8h" kindref="compound">database.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QStringList&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QString&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QMap&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QDebug&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">QByteArray<sp/><ref refid="functionsforserver_8cpp_1a35ec2c03b2fa42dbee1c13e5b89d768c" kindref="member">auth</ref>(QString<sp/>log)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_data_base_1a0f8839a75f6881d6b4a9e7d3eed0fb78" kindref="member">DataBase::test</ref>();</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">QByteArray<sp/><ref refid="functionsforserver_8cpp_1af15516dbde168cd1fabbce8e4209b5a5" kindref="member">parsing</ref><sp/>(QString<sp/>data_from_client)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data_from_client.contains(</highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStringList<sp/>data_from_client_list<sp/>=<sp/>data_from_client.split(QLatin1Char(</highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>log;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data_from_client_list.front()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;auth&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_from_client_list.pop_front();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log<sp/>=<sp/>data_from_client_list.front();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="functionsforserver_8cpp_1a35ec2c03b2fa42dbee1c13e5b89d768c" kindref="member">auth</ref>(log);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_from_client.toUtf8();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/QTT/Sborka/server/functionsforserver.cpp"/>
  </compounddef>
</doxygen>
